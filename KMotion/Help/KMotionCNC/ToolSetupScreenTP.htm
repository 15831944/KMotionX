<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>Tool Setup Trajectory Planner</title>
</head>

<body>

<p><i><b><font size="5" face="Arial">Tool Setup Screen - Trajectory Planner</font></b></i></p>
<p>
<map name="FPMap0">
<area href="#Trajectory_Planner" shape="rect" coords="23, 45, 701, 88">
<area href="#Jog_Speeds" shape="rect" coords="28, 98, 629, 120">
<area href="#Step_Increments" shape="rect" coords="36, 121, 625, 152">
<area href="#Axis_Motion_Parameters" shape="rect" coords="22, 154, 456, 340">
<area href="ToolSetupScreenM3.htm" shape="rect" coords="8, 23, 55, 45">
<area href="ToolSetupScreenM100.htm" shape="rect" coords="55, 21, 101, 44">
<area href="ToolSetupScreenButtons.htm" shape="rect" coords="102, 23, 162, 42">
<area href="ToolSetupScreenFiles.htm" shape="rect" coords="163, 23, 245, 45">
<area href="#Display_Encoders" shape="rect" coords="478, 165, 651, 198">
<area href="#Threading/Spindle_Settings" shape="rect" coords="16, 342, 402, 420">
<area href="#Zero_Using_Fixture_Offsets" shape="rect" coords="476, 204, 645, 234">
</map>
<img border="0" src="KMotionCNCfiles/ToolSetupTP.PNG" usemap="#FPMap0"></p>

<p><font face="Arial"><i>(Click on Image to Jump to 
		related help)</i></font></p>
<p><font face="Arial">The Tool Setup Screen allows <i>KMotionCNC</i> to be configured for a 
particular machine tool.&nbsp; Each machine tool is likely to have different 
motion resolution, speeds, and acceleration limits.&nbsp; It is also likely to 
different I/O requirements with regard to Spindle control and such.&nbsp; 
Additionally&nbsp; a machine may have different initialization and homing 
requirements.&nbsp; <i>KMotionCNC</i> has a flexible mechanism for defining what 
type of action is to be performed for various M Codes and Custom Buttons. </font> </p>
<p>&nbsp;</p>
<p><i><b><font size="4" face="Arial"><a name="Trajectory_Planner">Trajectory Planner</a></font></b></i></p>
<p>
<font face="Arial">
<img border="0" src="KMotionCNCfiles/TrajectoryPlanner.png" align="left" hspace="15"></font></p>
<p>
</p>
<p>
</p>
<p>
</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><font face="Arial"><i>KMotionCNC</i> contains a powerful Trajectory Planner.&nbsp; The 
Trajectory Planner utilizes a &quot;break angle&quot; concept to decide when a stop must 
be made.&nbsp; Vectors that are in the same direction within the &quot;break angle&quot; 
are traversed without stopping.&nbsp; When a &quot;sharp&quot; angle is detected a 
complete stop will be made before beginning on the next vector.&nbsp; The Break 
Angle Parameter allows the user to specify the angle in degrees that will be 
considered a &quot;sharp&quot; angle.&nbsp;&nbsp; <i>KMotionCNC</i> considers the change 
in direction in 3 dimensions (x,y,z ignoring a).&nbsp;&nbsp; The Trajectory 
Planner is capable of optimizing the acceleration and deceleration through many 
short (or long) vectors all of which may have different acceleration and 
velocity limitations.</font></p>
<p><font face="Arial">The Trajectory Planner also has a &quot;lookahead&quot; parameter.&nbsp; With 
KMotionCNC the G Code Program itself, the G Code Interpreter, and the Trajectory 
Planner all reside within the PC running Microsoft Windows™.&nbsp; 
Since the Microsoft Windows™ is <i>not</i> a 
real-time OS, a certain amount of motion must be buffered in the motion 
controller to handle the cases where the PC program doesn't have a chance to 
execute for a while.&nbsp; These time periods are typically very short (a few 
milliseconds), but in some extreme cases may occasionally be as long as one or 
several seconds.&nbsp; The worst case is often a factor of the hardware (disk 
network adapters, etc) and associated drivers that are loaded into the system.&nbsp;&nbsp; 
The lookahead parameter is used to determine how much motion, in terms of time, 
should be downloaded to the motion controller <i>before</i> actual motion is 
initiated.&nbsp;&nbsp; Furthermore, after motion has begun, the lookahead 
parameter is used to pause the trajectory planner to avoid having the Trajectory 
Planner get too far ahead of the actual motion.&nbsp; The disadvantage of having 
the Trajectory Planner get too far ahead is that if the User decides to override 
the feed rate, since the motion has already been planned and downloaded, the 
rate will not be changed quickly.&nbsp; A value of 3 seconds is very 
conservative on most systems.&nbsp; If more responsive feed rate override is 
desirable, an experiment with a smaller value might be made.</font></p>
<p><font face="Arial">&quot;Collinear Tolerance&quot; allows GCode blocks that are nearly 
linear, to be combined into a single linear segment to allow faster and smoother 
motion.&nbsp; Often GCode programs generated by 3D CAD systems contain very 
small vectors that appear jagged or noisy due to numerical round off errors .&nbsp;&nbsp; 
See below for an example of a small GCode fragment from an intended circle.&nbsp; 
The 0.3 inch diameter circle was divided into 10,000 sides each only 0.0001 
inches in length.&nbsp; Intuitively one would think this would result in an 
extremely smooth contour.&nbsp; Ironically, rounding off&nbsp; to 4 decimal 
digits introduces &quot;noise&quot; that results in sharp angles and each axis being 
required to repeatedly stop and start.&nbsp; Even with quite high acceleration, 
stopping and starting over short distances results in extremely low average 
speed and most likely a rough surface.&nbsp; A combined segment shown below in 
blue will result in a faster and smoother motion.</font></p>
<p><font face="Arial">Segments are combined as long as all intermediate 
waypoints do not deviate from the combined segment by more than the allowed 
collinear tolerance.&nbsp; Setting the collinear tolerance to zero will disallow 
any segments from being combined. </font></p>
<p><font face="Courier New">N70 G90 G54 G0 X6.315 Y4.7132 Z1.<br>
N100 G1 X6.3151 F60.<br>
N110 Y4.7133<br>
N120 X6.3152 Y4.7134<br>
N130 Y4.7135<br>
N140 X6.3153 Y4.7136<br>
N150 Y4.7137<br>
N160 X6.3154 Y4.7138<br>
N170 X6.3155 Y4.7139<br>
N180 Y4.714<br>
N190 X6.3156 Y4.7141<br>
N200 Y4.7142<br>
N210 X6.3157 Y4.7143<br>
N220 Y4.7144<br>
N230 X6.3158<br>
&nbsp;</font></p>
<p>
<img border="0" src="KMotionCNCfiles/CollinearTol.PNG" width="347" height="397"></p>
<p>&nbsp;</p>
<p><font face="Arial">The &quot;Arcs To Segments&quot; option allows circular arcs that 
were specified in the original GCode to be replaced by a number of linear 
segments.&nbsp; Each arc will be recursively subdivided until any cord error 
deviation from the original path is less than the Collinear Tolerance parameter.&nbsp; 
Sub dividing the arc (actually a helix) into line segments allows the path 
motion to be more fully optimized by the Trajectory Planner.&nbsp; This is 
because as the motion progresses through the arc the direction changes.&nbsp; As 
the direction changes the different axes become involved and also work together 
in different ways (diagonal directions make use of more than one axis).&nbsp; 
This means constraints (max velocity and acceleration) vary throughout the arc.&nbsp; 
With individual line segments the Trajectory planner is able to use optimal 
acceleration and velocity throughout the arc.&nbsp; When Arcs To Segments is not 
selected the entire arc may be treated as&nbsp; a single entity and will use the 
most limited velocity and acceleration constraints throughout the arc for the 
entire arc.&nbsp; If the feed rate is slow and curvature based accelerations are 
small relative to the axis limits then there will be little performance increase 
in using segments.</font></p>
<p><font face="Arial">When the &quot;Arcs To Segments&quot; Option is selected the 
Collinear Tolerance must be larger than zero.&nbsp; Care should be used in 
selecting a Collinear Tolerance so that an excessive number of segments is not 
generated.&nbsp; The number of segments increases as the square root of the 
inverse of the Collinear Tolerance (cutting the tolerance in half increase the 
number of segments by 40%).</font></p>
<p><font face="Arial">For a description of the <i>Corner Rounding</i> feature 
and Corner Tolerance and Facet Angle see <a href="TrajectoryPlanner.htm">here</a>.&nbsp;&nbsp;
</font></p>
<p>&nbsp;</p>
<p><i><b><font size="4" face="Arial"><a name="Jog_Speeds">Jog Speeds</a></font></b></i></p>
<p><font face="Arial"><img border="0" src="KMotionCNCfiles/JogSpeeds.png" align="left" hspace="15"></font></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><font face="Arial">Defines the Jog Speeds for both the Jog Buttons and any attached Gamepad 
controller.&nbsp; These speed are the maximum Jog speed which is the double 
arrow jog button or the GamePad joystick fully depressed.&nbsp; See Also
<a href="KMotionCNC.htm#Jog_Buttons">Jog Buttons</a>.&nbsp; The Reverse R/Z may 
be selected if the GamePad Z motion is reversed on a particular GamePad device.</font></p>
<p>&nbsp;</p>
<p><i><b><font face="Arial" size="4"><a name="Step_Increments">Step Increments</a></font></b></i></p>
<p>
<img border="0" src="KMotionCNCfiles/StepIncrements.PNG"></p>
<p><font face="Arial">Defines the step size distances for the Step Buttons that are displayed on 
the main <i>KMotionCNC</i> Screen.&nbsp; Setting a step size to zero will hide 
the size selection.&nbsp; See Also
<a href="KMotionCNC.htm#Jog_Buttons">Jog Buttons</a>.</font></p>
<p>&nbsp;</p>
<p><i><b><font face="Arial" size="4"><a name="Display_Encoders">Display Encoders</a></font></b></i></p>
<p><font face="Arial">
<img border="0" src="KMotionCNCfiles/DisplayEncoders.png" width="170" height="37"></font></p>
<p><font face="Arial">Displays in the DROs the Measured Encoder Position for 
axes that are configured with an Input Mode other than None.&nbsp; When 
Un-checked all DROs display the commanded position.</font></p>
<p>&nbsp;</p>
<p><i><b><font face="Arial" size="4"><a name="Zero_Using_Fixture_Offsets">Zero 
Using Fixture Offsets</a></font></b></i></p>
<p><font face="Arial">
<img border="0" src="KMotionCNCfiles/ZeroUsingFixtureOffsets.png" width="234" height="48"></font></p>
<p><font face="Arial">Zero/Set Buttons near DROs allow the User to Set the DRO 
to Zero or a Specified Value.&nbsp; This is accomplished by adjusting GCode 
Offsets.&nbsp; When this option is selected then the currently selected Fixture 
Offset will be adjusted.&nbsp; When unchecked the Global G92/G52 Offset will be 
adjusted</font></p>

<p>&nbsp;</p>
<p><i><b><font size="4" face="Arial"><a name="Axis_Motion_Parameters">Axis Motion Parameters</a></font></b></i></p>
<p>
<font face="Arial">
<img border="0" src="KMotionCNCfiles/AxisParams.png" align="left" hspace="15"></font></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><font face="Arial">The Axis Motion Parameters define the scale, maximum feed velocities, and 
maximum feed accelerations for each of the six axis.&nbsp; </font> </p>
<p><font face="Arial">The first parameter is the axis's scale in counts/inch.&nbsp; For the example 
value of 100 shown, <i>KMotionCNC</i> will command the motion controller to move 
100 counts for each inch of motion in the G Code Program.&nbsp; This value is 
always in counts/inch regardless of the units used in the interpreter.&nbsp; <i>
KMotionCNC</i> will automatically perform any conversions.</font></p>
<p><font face="Arial">The second parameter is the maximum allowed feed rate for the axis in 
inches/sec.&nbsp; Note that the G Code Interpreter Feed Rate is defined in 
inches per minute or (mm per minute) so be aware of the different time units.&nbsp; 
These are <i>maximum</i> feed rates for each axis.&nbsp; If a vector tool motion 
at a particular feed rate has any component velocity that exceeds the 
corresponding axis's maximum velocity, the feed rate for the vector will be 
reduced so that all axes remain at or below their maximum allowed velocity.</font></p>
<p><font face="Arial">The third parameter is the maximum allowed acceleration for the axis in 
inches/sec<sup>2</sup>.&nbsp; The G Code Language has no provisions for 
specifying acceleration rates.&nbsp; Therefore the acceleration (and 
deceleration) along a vector used will always be the largest acceleration such 
that each axis's acceleration is at or below the specified limit.</font></p>
<p><font face="Arial">The velocity and acceleration limits apply only to linear and circular feed 
motions (G1, G2, G3).&nbsp; Rapid motions (G0) use the settings in the motion 
controller (velocity, acceleration, and Jerk) to move each axis independently 
from one point to another (which is likely not to be a straight line).&nbsp; To 
change the speed of Rapid motions change the configuration settings in the 
motion controller.</font></p>
<p><font face="Arial">Axes A,B,C sometimes are angular axes and are programmed 
to move angles of degrees rather than linear distances.&nbsp; If so select 
&quot;Degrees&quot; so that the axis moves in degrees regardless of the Inch or mm modes 
in GCode.&nbsp; </font></p>
<p><font face="Arial">The best method for performing coordinated linear and 
angular combined motion is to use G93 Inverse Time Mode.&nbsp; This mode allows 
the CAD system to generate GCode that will cause the feed rate at the tool to 
always be at the desired feed rate based on the geometry of the system.&nbsp; 
However this requires a time (specified by its inverse) for each GCode block to 
be computed and included in the data stream.&nbsp; If&nbsp; Inverse TIme GCode 
data is not available a Radius for each Angular Axis can be specified.&nbsp;&nbsp; 
This allows the Trajectory planner to convert angular motion rates to linear 
motion rates.&nbsp; This assumes that the tool will remain at a relatively 
constant radius from the rotation axis (ie. engraving on a cylinder).&nbsp; 
Whenever Degrees is specified with a non-zero radius then the Trajectory Planner 
will consider the motion for that axis to be at the equivalent radius and 
orthogonal to all other combined motions.</font></p>
<p><font face="Arial">As an example for the settings shown above for Axis A the 
maximum linear Velocity and Acceleration rates are the same as X, Y, and Z 
assuming a 10 inch radius about the A Axis of rotation.</font></p>
<p><font face="Arial">57.295 deg/sec&nbsp; x </font>
<font face="Times New Roman" size="4">&nbsp;&#960;</font><font face="Arial">/180deg&nbsp; 
x&nbsp; 10in&nbsp; = 10in/sec</font></p>
<p><font face="Arial">229.183 deg/sec<sup>2</sup> x </font>
<font face="Times New Roman" size="4">&nbsp;&#960;</font><font face="Arial">/180deg&nbsp; 
x&nbsp; 10in&nbsp; = 40in/sec<sup>2</sup></font></p>
<p><font face="Arial">The GCode sequence shown below will perform a G1 Feed a 
linear distance of 10 inches in both X and A.&nbsp; Because the X and A axis are 
assumed to be orthogonal the combined distance will be assumed to be 14.1 inches 
total.&nbsp; At a feed rate of 60 ipm = 1 ips, the total Feed Time will be 14.1 
sec (plus a small acceleration time).</font></p>
<p><font face="Arial">G20<br>
G0 X0 Y0 Z0 A0<br>
G1 X10 A57.295 F60<br>
M2</font></p>
<p>&nbsp;</p>
<p><b><i><font face="Arial" size="4"><a name="Threading/Spindle_Settings">
Threading/Spindle Settings</a></font></i></b></p>
<p>
<img border="0" src="KMotionCNCfiles/Threading.png" width="559" height="102" align="left"></p>

<p>&nbsp;</p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p><font face="Arial" size="3">
		Spindle Speed measurement is also supported (Single Point Threading is 
under development).&nbsp; A quadrature encoder is required on the spindle.&nbsp; Specify the 
		Sensor Type as 1 to enable the Spindle measurement.&nbsp; Configure the 
		Axis Channel that is configured to read the encoder (Note this is not 
		the encoder channel, rather it is the axis that has the encoder channel 
		configured as its input).&nbsp; Specify the Update time, Tau, and 
		counts/rev.&nbsp; See <a href="../Cmd.htm#ConfigSpindle">here</a> for 
		more information.&nbsp; </font></p>

</body>

</html>
